{"version":3,"sources":["components/FileTrainSpecs.js","components/FormEvaluar.js","components/FileTestSpecs.js","components/FormClasificar.js","components/FileClassifySpecs.js","assets/img/logo.svg","components/Menu.js","components/Header.js","components/Footer.js","components/Autor.js","components/Index.js","components/Error.js","Router.js","App.js","reportWebVitals.js","index.js","assets/img/lr2.gif","components/FormEntrenar.js"],"names":["StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","FileTrainSpecs","React","useState","anchorEl","setAnchorEl","variant","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","sendWithAxios","formData","axios","method","url","data","headers","then","response","document","getElementById","classList","remove","add","innerHTML","Error","console","log","length","accuracy","toFixed","fileContent","utf8","encode","file","iconv","Buffer","from","archivo","Blob","type","csvURL","window","URL","createObjectURL","tempLink","createElement","href","setAttribute","click","catch","FormEvaluar","termsRef","createRef","readFile","Promise","resolve","reject","reader","FileReader","readAsBinaryString","onload","result","onerror","error","onTrainUpload","setState","train","target","files","fileExt","name","split","pop","extTrain","e","onTestUpload","test","extTest","updateTerms","terms","checked","disabled","onFormSubmit","preventDefault","current","value","FormData","append","state","service","decFile","decode","File","Fragment","className","onSubmit","this","accept","placeholder","onChange","ref","trainRef","required","dataset2Ref","defaultChecked","src","loading","width","alt","Component","FileTestSpecs","secondary","FormClasificar","FileClassifySpecs","Menu","Navbar","expand","Brand","logo","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","Header","Footer","Autor","Index","Router","exact","path","component","FormEntrenar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","onFileUpload","num_capas","num_neuronas","error_perc","avg_loss","rel"],"mappings":"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","file":"static/js/main.7e5f2545.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function FileTrainSpecs() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        Condiciones del CSV\n      </Button>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemText primary=\"Archivo en formato CSV\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Separado por coma -> ,\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Mínimo 6 registros\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Máximo 100k registros\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Tamaño máximo 20MB\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"La última columna es variable de clase\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport utf8 from 'utf8';\nimport iconv from 'iconv-lite';\nimport loading from '../assets/img/lr2.gif';\nimport FileTestSpecs from './FileTestSpecs';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nfunction sendWithAxios(formData) {\n    axios({\n        method: \"post\",\n        url: `${API_URL}/test`,\n        data: formData,\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\n            \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\",\n            \"Content-Type\": \"multipart/form-data\"\n        },\n    })\n        .then(function (response) {\n            // correcto, hay que mostrar el response en pantalla\n\n            if (\"Error\" in response.data) {\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-error\").classList.remove('not-showing');\n                document.getElementById(\"div-error\").classList.add('showing');\n\n                document.getElementById(\"p-error\").innerHTML = response.data.Error;\n\n            } else {\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-metricas\").classList.remove('not-showing');\n                document.getElementById(\"div-metricas\").classList.add('showing');\n\n                console.log(response);\n\n                document.getElementById(\"total_casos\").innerHTML = response.data[\"trues\"].length;\n                document.getElementById(\"accuracy\").innerHTML = response.data.accuracy.toFixed(2);\n                document.getElementById(\"precision\").innerHTML = response.data['macro avg'][\"f1-score\"].toFixed(2);\n                document.getElementById(\"recall\").innerHTML = response.data['macro avg'][\"recall\"].toFixed(2);\n                document.getElementById(\"fscore\").innerHTML = response.data['macro avg'][\"precision\"].toFixed(2);\n                document.getElementById(\"error_perc\").innerHTML = response.data['error score'].toFixed(2);\n\n                var fileContent = utf8.encode(response.data.file);\n                fileContent = iconv.encode(Buffer.from(response.data.file), 'iso-8859-1');\n                var archivo = new Blob([fileContent], { type: 'text/csv' });\n                var csvURL = window.URL.createObjectURL(archivo);\n                var tempLink = document.createElement('a');\n                tempLink.href = csvURL;\n                tempLink.setAttribute('download', 'clasificado.csv');\n                tempLink.click();\n            }\n        })\n        .catch(function (response) {\n            // mostrar código de error\n            console.log(response);\n        });\n}\n\n\nexport default class FormEvaluar extends Component {\n\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            //email: null,\n            service: 'test',\n            terms: true,\n            train: null,\n            test: null,\n            extTrain: null,\n            extTest: null\n        }\n    }\n\n    // referencias a los campos del formulario\n    //emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    readFile = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsBinaryString(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTrainUpload = (event) => {\n        try {\n            this.setState({ train: event.target.files[0] });\n            var fileExt = (event.target.files[0].name).split('.').pop();\n            this.setState({ extTrain: fileExt })\n        } catch (e) {\n            console.error(\"Fichero train eliminado.\");\n        }\n    };\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTestUpload = (event) => {\n        try {\n            this.setState({ test: event.target.files[0] });\n            var fileExt = (event.target.files[0].name).split('.').pop();\n            this.setState({ extTest: fileExt })\n        } catch (e) {\n            console.error(\"Fichero test eliminado.\");\n        }\n    };\n\n    updateTerms = (event) => {\n        this.setState({ terms: !(document.getElementById(\"terms\").checked) })\n        document.getElementById(\"enviar\").disabled = !document.getElementById(\"terms\").checked;\n    }\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // Función de cambio de vista\n        document.getElementById(\"div-entrenar\").classList.remove('showing');\n        document.getElementById(\"div-entrenar\").classList.add('not-showing');\n        document.getElementById(\"div-loading\").classList.remove('not-showing');\n        document.getElementById(\"div-loading\").classList.add('showing');\n\n        // actualizo las variables de estado con los varlores del formulario\n        //this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        /* Cargar el objeto\n        formData.append(\n            'email', this.emailRef.current.value\n        );*/\n\n        formData.append(\n            'servicio', this.state.service\n        );\n\n        formData.append(\n            'test', this.state.test, 'test'\n        );\n\n        formData.append(\n            'train_extension', this.state.extTrain\n        );\n\n        formData.append(\n            'test_extension', this.state.extTest\n        );\n\n        if (document.getElementById(\"terms\").checked === true) {\n            formData.append(\n                'terms', 'Acepto'\n            );\n        } else {\n            formData.append(\n                'terms', 'No acepto'\n            );\n        }\n\n        if (this.state.extTrain === \"onnx\") {\n            this.readFile(this.state.train).then(\n                data => {\n                    decFile = iconv.decode(data, 'ISO-8859-1');\n                    decFile = new File([decFile], {'type': 'text/plain'});\n                    formData.append(\n                        'train', decFile, 'train'\n                    );\n                    sendWithAxios(formData);\n                }\n            ).catch( data => {\n                console.log(data)\n            });\n        } else {\n            var decFile = this.state.train\n            formData.append(\n                'train', decFile\n            );\n            sendWithAxios(formData);\n        }\n\n    };\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"App-header\">\n                    <h1><b>Evaluar.</b></h1>\n\n                    <div id='div-entrenar' className=\"showing\">\n                        <div className='form-group'>\n                            <p><b>Resultado:</b> datos de evaluación del clasificador.</p>\n                        </div>\n\n                        <FileTestSpecs />\n                        <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                            <div className=\"input-group mb-3\">\n                                <p>Definición de la red neuronal o conjunto de datos de entrenamiento:</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='train'\n                                    name='train'\n                                    accept=\".csv,.onnx\"\n                                    placeholder=\"Dataset de train\"\n                                    aria-label=\"Dataset de train\"\n                                    aria-describedby=\"basic-addon1\"\n                                    onChange={this.onTrainUpload}\n                                    ref={this.trainRef}\n                                    required />\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <p>Conjunto de datos clasificados:</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='dataset2'\n                                    name='dataset2'\n                                    accept=\".csv\"\n                                    placeholder=\"Dataset de test\"\n                                    aria-label=\"Dataset de test\"\n                                    aria-describedby=\"basic-addon1\"\n                                    onChange={this.onTestUpload}\n                                    ref={this.dataset2Ref}\n                                    required />\n                            </div>\n\n                            {/*<div className=\"input-group mb-3\">\n                                <p>Email (opcional):</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon1\">@</span>\n                                </div>\n                                <input\n                                    className=\"form-control\"\n                                    type='email'\n                                    id='email'\n                                    name='email'\n                                    placeholder=\"Email\"\n                                    aria-label=\"Email\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.emailRef} />\n                            </div>\n*/}\n                            <div className='form-group'>\n                                <p>\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            name=\"terms\"\n                                            id=\"terms\"\n                                            value=\"Acepto\"\n                                            ref={this.termsRef}\n                                            defaultChecked={false}\n                                            onChange={this.updateTerms} />\n                                        Entiendo que el uso de esta aplicación es experimental.\n                                    </label>\n                                </p>\n                            </div>\n\n                            <div className='form-group'>\n                                <input id=\"enviar\" type='submit' disabled={true} className=\"btn btn-info\" value=\"Evaluar\" />\n                            </div>\n\n                        </form>\n                    </div>\n\n                    <div id='div-loading' className=\"not-showing\">\n                        <br /><h2>La aplicación está procesando.<br/>Esto puede demorar un rato...</h2>\n                        <img src={loading} width=\"600px;\" alt=\"loading\" id=\"img-loading\" />\n                    </div>\n\n                    <div id='div-metricas' className=\"not-showing\">\n                        <br /><h2>Métricas</h2>\n                        <p>\n                            <li key='MET01'>  Total casos: <span id=\"total_casos\"></span></li>\n                            <li key='MET02'>  Accuracy: <span id=\"accuracy\"></span></li>\n                            <li key='MET03'>  Precision: <span id=\"precision\"></span></li>\n                            <li key='MET04'>  Recall: <span id=\"recall\"></span></li>\n                            <li key='MET05'>  F1-score: <span id=\"fscore\"></span></li>\n                            <li key='MET06'>  Error: <span id=\"error_perc\"></span></li>\n                        </p>\n                    </div>\n\n                    <div id='div-error' className=\"not-showing\" border=\"1\">\n                        <h2>Error</h2>\n                        <p id=\"p-error\"></p>\n                    </div>\n\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function FileTestSpecs() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        Condiciones del CSV\n      </Button>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemText primary=\"Archivo en formato CSV u ONNX\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Separado por coma -> ,\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Mínimo 6 registros\"  secondary=\"Sólo CSV Train\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Máximo 100k registros\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Tamaño máximo 20MB\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"La última columna es variable de clase\"  secondary=\"Ambos CSV\"/>\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport utf8 from 'utf8';\nimport iconv from 'iconv-lite';\nimport loading from '../assets/img/lr2.gif';\nimport FileClassifySpecs from './FileClassifySpecs';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nfunction sendWithAxios(formData) {\n    axios({\n        method: \"post\",\n        url: `${API_URL}/classify`,\n        data: formData,\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\n            \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\",\n            \"Content-Type\": \"multipart/form-data\"\n        },\n    })\n        .then(function (response) {\n            // correcto, hay que mostrar el response en pantalla\n\n            if (\"Error\" in response.data) {\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-error\").classList.remove('not-showing');\n                document.getElementById(\"div-error\").classList.add('showing');\n\n                document.getElementById(\"p-error\").innerHTML = response.data.Error;\n\n            } else {\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-metricas\").classList.remove('not-showing');\n                document.getElementById(\"div-metricas\").classList.add('showing');\n\n                console.log(response);\n\n                var fileContent = utf8.encode(response.data.file);\n                fileContent = iconv.encode(Buffer.from(response.data.file), 'iso-8859-1');\n                var archivo = new Blob([fileContent], { type: 'text/csv' });\n                var csvURL = window.URL.createObjectURL(archivo);\n                var tempLink = document.createElement('a');\n                tempLink.href = csvURL;\n                tempLink.setAttribute('download', 'clasificado.csv');\n                tempLink.click();\n            }\n        })\n        .catch(function (response) {\n            // mostrar código de error\n            console.log(response);\n        });\n}\n\nexport default class FormClasificar extends Component {\n\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            //email: null,\n            service: 'classify',\n            terms: false,\n            train: null,\n            test: null,\n            extTrain: null,\n            extTest: null\n        }\n    }\n\n    // referencias a los campos del formulario\n    //emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    readFile = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsBinaryString(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTrainUpload = (event) => {\n        try {\n            this.setState({ train: event.target.files[0] });\n            var fileExt = (event.target.files[0].name).split('.').pop();\n            this.setState({ extTrain: fileExt })\n        } catch (e) {\n            console.error(\"Fichero train eliminado.\");\n        }\n    };\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTestUpload = (event) => {\n        try {\n            this.setState({ test: event.target.files[0] });\n            var fileExt = (event.target.files[0].name).split('.').pop();\n            this.setState({ extTest: fileExt })\n        } catch (e) {\n            console.error(\"Fichero test eliminado.\");\n        }\n    };\n\n    updateTerms = (event) => {\n        this.setState({ terms: !(document.getElementById(\"terms\").checked) })\n        document.getElementById(\"enviar\").disabled = !document.getElementById(\"terms\").checked;\n    }\n\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // Función de cambio de vista\n        document.getElementById(\"div-entrenar\").classList.remove('showing');\n        document.getElementById(\"div-entrenar\").classList.add('not-showing');\n        document.getElementById(\"div-loading\").classList.remove('not-showing');\n        document.getElementById(\"div-loading\").classList.add('showing');\n\n        // actualizo las variables de estado con los valores del formulario\n        //this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        /* Cargar el objeto\n        formData.append(\n            'email', this.emailRef.current.value\n        );*/\n\n        formData.append(\n            'servicio', this.state.service\n        );\n\n        formData.append(\n            'test', this.state.test, 'test'\n        );\n\n        formData.append(\n            'train_extension', this.state.extTrain\n        );\n\n        formData.append(\n            'test_extension', this.state.extTest\n        );\n\n        if (document.getElementById(\"terms\").checked === true) {\n            formData.append(\n                'terms', 'Acepto'\n            );\n        } else {\n            formData.append(\n                'terms', 'No acepto'\n            );\n        }\n\n        if (this.state.extTrain === \"onnx\") {\n            this.readFile(this.state.train).then(\n                data => {\n                    var decFile = iconv.decode(data, 'ISO-8859-1');\n                    decFile = new File([decFile], {'type': 'text/plain'});\n                    formData.append(\n                        'train', decFile, 'train'\n                    );\n                    sendWithAxios(formData);\n                }\n            ).catch( data => {\n                console.log(data)\n            });\n        } else {\n            var decFile = this.state.train\n            formData.append(\n                'train', decFile\n            );\n            sendWithAxios(formData);\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <header className=\"App-header\">\n                    <h1><b>Clasificar.</b></h1>\n\n                    <div id='div-entrenar' className=\"showing\">\n                        <div className='form-group'>\n                            <p><b>Resultado:</b> conjunto de datos clasificado.</p>\n                        </div>\n                        <FileClassifySpecs />\n                        <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                            <div className=\"input-group mb-3\">\n                                <p>Definición de la red neuronal o conjunto de datos de entrenamiento:</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='train'\n                                    name='train'\n                                    accept=\".csv,.onnx\"\n                                    placeholder=\"Dataset de train\"\n                                    aria-label=\"Dataset de train\"\n                                    aria-describedby=\"basic-addon1\"\n                                    onChange={this.onTrainUpload}\n                                    ref={this.trainRef}\n                                    required />\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <p>Conjunto de datos clasificados:</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='dataset2'\n                                    name='dataset2'\n                                    accept=\".csv\"\n                                    placeholder=\"Dataset de test\"\n                                    aria-label=\"Dataset de test\"\n                                    aria-describedby=\"basic-addon1\"\n                                    onChange={this.onTestUpload}\n                                    ref={this.dataset2Ref}\n                                    required />\n                            </div>\n{/*\n                            <div className=\"input-group mb-3\">\n                                <p>Email (opcional):</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon1\">@</span>\n                                </div>\n                                <input\n                                    className=\"form-control\"\n                                    type='email'\n                                    id='email'\n                                    name='email'\n                                    placeholder=\"Email\"\n                                    aria-label=\"Email\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.emailRef} />\n                            </div>\n*/}\n                            <div className='form-group'>\n                                <p>\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            name=\"terms\"\n                                            id=\"terms\"\n                                            value=\"Acepto\"\n                                            ref={this.termsRef}\n                                            defaultChecked={false}\n                                            onChange={this.updateTerms} />\n                                        Entiendo que el uso de esta aplicación es experimental.\n                                    </label>\n                                </p>\n                            </div>\n\n                            <div className='form-group'>\n                                <input id=\"enviar\" type='submit' className=\"btn btn-info\" disabled={true} value=\"Clasificar\" />\n                            </div>\n\n                        </form>\n                    </div>\n\n                    <div id='div-loading' className=\"not-showing\">\n                        <br /><h2>La aplicación está procesando.<br/>Esto puede demorar un rato...</h2>\n                        <img src={loading} width=\"600px;\" alt=\"loading\" id=\"img-loading\" />\n                    </div>\n\n                    <div id='div-metricas' className=\"not-showing\">\n                        <br /><h2>Métricas</h2>\n                        <p>\n                            Se han descargado los casos clasificados.\n                        </p>\n                    </div>\n\n                    <div id='div-error' className=\"not-showing\" border=\"1\">\n                        <h2>Error</h2>\n                        <p id=\"p-error\"></p>\n                    </div>\n\n\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function FileClassifySpecs() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        Condiciones del CSV\n      </Button>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemText primary=\"Archivo en formato CSV u ONNX\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Separado por coma -> ,\"/>\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Mínimo 6 registros\"  secondary=\"Sólo CSV Train\"/>\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Máximo 100k registros\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Tamaño máximo 20MB\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"Todas las clases deben tener al menos un registro\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText primary=\"La última columna es variable de clase\" secondary=\"Sólo CSV Train\"/>\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.e53c176c.svg\";","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport logo from '../assets/img/logo.svg';\n\nexport default class Menu extends React.Component {\n\n    render() {\n        return (\n            <div id=\"divMenu\">\n                <Navbar expand=\"lg\">\n                    <Navbar.Brand href=\"/\">\n                        {/* Carga el logo */}\n                        <div id=\"logo\">\n                            <img src={logo} className=\"app-logo\" alt=\"Logotipo\" />\n                            <span id=\"brand\">\n                                <strong>GANN</strong>Service\n                            </span>\n                        </div>\n                    </Navbar.Brand>\n                    {/* <Navbar.Brand href=\"/\">Inicio</Navbar.Brand>*/}\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            <Nav.Link href=\"/\">Inicio</Nav.Link>\n                            <NavDropdown title=\"Servicios\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"/entrenamiento\">Entrenamiento</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/evaluacion\">Evaluación</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/clasificacion\">Clasificación</NavDropdown.Item>\n                                {/* <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>*/}\n                            </NavDropdown>\n                            <Nav.Link href=\"/autor\">Autor y Memoria</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport Menu from './Menu';\n\nclass Header extends Component {\n\n    render() {\n        return (\n\n            <header id=\"header\">\n                <div className=\"center\">\n\n                    {/* Carga el menú */}\n                    <Menu/>\n\n                    {/* Limpiar flotados */}\n                    <div className=\"clearfix\"></div>\n                </div>\n            </header>\n\n        );\n    }\n\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer id=\"footer\">\n            <div className=\"center\">\n                <p>\n                    TFG de <a href=\"https://leroydeniz.com\"> Leroy Deniz</a> &nbsp; | &nbsp; Grado en Ingeniería Informática &nbsp; | &nbsp; Universidad del País Vasco\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nexport default class Autor extends Component {\n  render() {\n    return (\n\n      <header className=\"App-header\">\n        <h1>Autor.</h1>\n        <h3>Leroy Deniz</h3>\n        <p>Grado en Ingeniería Informática<br />\n          Especialidad Ingeniería de Software<br /><br />\n          (+34) 669 987 109<br />\n          leroydeniz <code>[at]</code> icloud.com<br /><br />\n          <code>https://leroydeniz.com</code>\n        </p>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Index extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <h1>GANN Service.</h1>\n        <p>\n          Los algoritmos de clasificación supervisada resuelven un tipo de problemas específicos donde se cuenta con una serie de datos previamente clasificados. Para poder decidir la clase de una muestra, se tiene en cuenta toda la información que se pueda extraer del conjunto de datos inicial, cuya clase es conocida por el clasificador.<br /><br />\n          En este trabajo se implementa una aplicación web, que permite al usuario interactuar a través de un webservice, con una API (Application Programming Interface) capaz de entrenar y aproximar muy bien un óptimo global de una red neuronal profunda mediante algoritmos genéticos, con las funcionalidades de entrenamiento, evaluación y clasificación.<br /><br />\n          La aplicación es construida sobre una arquitectura de tres capas, contando con una interfaz web diseñada en ReactJS, que permitirá al usuario interactuar con las funcionalidades del software de clasificación.<br /><br />\n          Se aborda el diseño del Core utilizando técnicas de clasificación supervisada bajo entrenamiento de redes neuronales profundas, optimizándolas a través de backpropagation y evolucionándolas con algoritmos genéticos. La API es construida en Python con Flask a nivel de Controlador y PyTorch como framework en el Core. Este último será el responsable de entrenar la red neuronal y hacerla evolucionar hasta lograr una aproximación muy cercana al óptimo global. El uso de metaheurísticas permite a la red modificar sus pesos y crecer o reducir, tanto en número de nodos como de capas de manera dinámica, en función de lo que ella misma considere necesaria para su propio entrenamiento.<br />\n        </p>\n\n        <div className='form-group'>\n          <a href=\"entrenamiento\"><input id=\"entrenar\" type='button' className=\"btn btn-info\" value=\"Entrenar\" /></a> &nbsp;\n          <a href=\"evaluacion\"><input id=\"entrenar\" type='button' className=\"btn btn-info\" value=\"Evaluar\" /></a> &nbsp;\n          <a href=\"clasificacion\"><input id=\"entrenar\" type='button' className=\"btn btn-info\" value=\"Clasificar\" /></a>\n        </div>\n      </header>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class Error extends Component {\n    render(){\n        return(\n            \n            <header className=\"App-header\">\n            <h1>Ups.</h1>\n            <p>La página a la que intenta acceder no ha sido encontrada.</p>\n          </header>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport FormEntrenar from './components/FormEntrenar';\nimport FormEvaluar from './components/FormEvaluar';\nimport FormClasificar from './components/FormClasificar';\nimport Autor from './components/Autor';\nimport Index from './components/Index';\nimport Error from './components/Error';\n\n\nclass Router extends Component {\n/* Configurador de rutas y páginas */ \n    render() {\n\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Index}/>\n                    <Route exact path=\"/index\" component={Index}/>;\n                    <Route exact path=\"/entrenamiento\" component={FormEntrenar}/>;\n                    <Route exact path=\"/evaluacion\" component={FormEvaluar}/>;\n                    <Route exact path=\"/clasificacion\" component={FormClasificar}/>;\n                    <Route exact path=\"/autor\" component={Autor}/>;\n                    <Route component={Error}/>;\n                </Switch>\n            </BrowserRouter>\n        );\n\n    }\n\n}\n\nexport default Router;","import './assets/css/App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      {/* Importar el header */}\n      <Header />\n\n      {/* Importar el archivo de rutas */}\n      <Router/>\n\n\n      {/* Importar el footer */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/lr2.2cce4ca0.gif\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport utf8 from 'utf8';\nimport iconv from 'iconv-lite';\nimport loading from '../assets/img/lr2.gif';\nimport FileTrainSpecs from './FileTrainSpecs';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nexport default class FormEntrenar extends Component {\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            //email: null,\n            service: 'train',\n            terms: false,\n            train: null,\n            extTrain: null\n        }\n    }\n\n    // referencias a los campos del formulario\n    //emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onFileUpload = (event) => {\n        try {\n            this.setState({ train: event.target.files[0] });\n            var fileExt = (event.target.files[0].name).split('.').pop();\n            this.setState({ extTrain: fileExt })\n            document.getElementById(\"enviar\").disabled = !this.state.terms;\n            console.log(this.state);\n        } catch (e) {\n            console.error(\"Fichero eliminado.\");\n        }\n\n    };\n\n    updateTerms = (event) => {\n        this.setState({ terms: !(document.getElementById(\"terms\").checked) })\n        document.getElementById(\"enviar\").disabled = !document.getElementById(\"terms\").checked;\n    }\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // Función de cambio de vista\n        document.getElementById(\"div-entrenar\").classList.remove('showing');\n        document.getElementById(\"div-entrenar\").classList.add('not-showing');\n        document.getElementById(\"div-loading\").classList.remove('not-showing');\n        document.getElementById(\"div-loading\").classList.add('showing');\n\n        // actualizo las variables de estado con los varlores del formulario\n        //this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        /* Cargar el objeto\n        formData.append(\n            'email', this.emailRef.current.value\n        );*/\n\n        formData.append(\n            'servicio', this.state.service\n        );\n\n        formData.append(\n            'train', this.state.train\n        );\n\n        formData.append(\n            'train_extension', this.state.extTrain\n        );\n\n        if (document.getElementById(\"terms\").checked === true) {\n            formData.append(\n                'terms', 'Acepto'\n            );\n        } else {\n            formData.append(\n                'terms', 'No acepto'\n            );\n        }\n\n\n\n        axios({\n            method: \"post\",\n            url: `${API_URL}/train`,\n            data: formData,\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                \"Access-Control-Allow-Headers\": \"Content-Type\",\n                \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\",\n                'Content-Type': 'multipart/form-data'\n            },\n        })\n            .then(function (response) {\n\n                if (\"Error\" in response.data) {\n\n                    document.getElementById(\"div-loading\").classList.remove('showing');\n                    document.getElementById(\"div-loading\").classList.add('not-showing');\n                    document.getElementById(\"div-error\").classList.remove('not-showing');\n                    document.getElementById(\"div-error\").classList.add('showing');\n\n                    document.getElementById(\"p-error\").innerHTML = response.data.Error;\n\n                } else {\n                    document.getElementById(\"div-loading\").classList.remove('showing');\n                    document.getElementById(\"div-loading\").classList.add('not-showing');\n                    document.getElementById(\"div-metricas\").classList.remove('not-showing');\n                    document.getElementById(\"div-metricas\").classList.add('showing');\n\n                    console.log(response);\n\n                    document.getElementById(\"num_capas\").innerHTML = response.data.num_capas;\n                    document.getElementById(\"num_neuronas\").innerHTML = response.data.num_neuronas;\n                    document.getElementById(\"accuracy\").innerHTML = 100 - response.data.error_perc.toFixed(2);\n                    document.getElementById(\"avg_loss\").innerHTML = response.data.avg_loss.toFixed(2);\n                    document.getElementById(\"error_perc\").innerHTML = response.data.error_perc.toFixed(2);\n\n                    var fileContent = utf8.encode(response.data.file);\n                    fileContent = iconv.encode(Buffer.from(response.data.file), 'iso-8859-1');\n                    var archivo = new Blob([fileContent], { type: 'text/onnx' });\n                    var csvURL = window.URL.createObjectURL(archivo);\n                    var tempLink = document.createElement('a');\n                    tempLink.href = csvURL;\n                    tempLink.setAttribute('download', 'model.onnx');\n                    tempLink.click();\n                }\n            })\n            .catch(function (response) {\n                // mostrar código de error\n                console.log(\"ERROR >> \" + response);\n\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-error\").classList.remove('not-showing');\n                document.getElementById(\"div-error\").classList.add('showing');\n\n                document.getElementById(\"p-error\").innerHTML = response;\n\n            });\n    };\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"App-header\">\n                    <h1><b>Entrenar.</b></h1>\n                    <div id='div-entrenar' className=\"showing\">\n                        <div className='form-group'>\n                            <p><b>Resultado:</b> configuración de una red neuronal y las métricas de evaluación de ésta.</p>\n                            <FileTrainSpecs />\n                        </div>\n\n                        <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                            <div className=\"input-group mb-3\">\n                                <p>Conjunto de datos de entrenamiento:</p>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='train'\n                                    name='train'\n                                    accept=\".csv\"\n                                    placeholder=\"Dataset de train\"\n                                    aria-label=\"Dataset de train\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.trainRef}\n                                    onChange={this.onFileUpload}\n                                    required />\n                            </div>\n                            {/* \n                            <div className=\"input-group mb-3\">\n                                <p>Email (opcional):</p>\n                            </div>\n                           <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon1\">@\n                                    </span>\n                                </div>\n                                <input\n                                    className=\"form-control\"\n                                    type='email'\n                                    id='email'\n                                    name='email'\n                                    placeholder=\"Email\"\n                                    aria-label=\"Email\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.emailRef} />\n                            </div>\n        */}\n\n                            <div className='form-group'>\n                                <p>\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            name=\"terms\"\n                                            id=\"terms\"\n                                            value=\"Acepto\"\n                                            ref={this.termsRef}\n                                            defaultChecked={false}\n                                            onChange={this.updateTerms} />\n                                        Entiendo que el uso de esta aplicación es experimental.\n                                    </label>\n                                </p>\n                            </div>\n\n                            <div className='form-group'>\n                                <input id=\"enviar\" type='submit' disabled={true} className=\"btn btn-info\" value=\"Entrenar\" />\n                            </div>\n\n                        </form>\n                    </div>\n\n                    <div id='div-loading' className=\"not-showing\">\n                        <br /><h2>La aplicación está procesando.<br />Esto puede demorar un rato...</h2>\n                        <img src={loading} width=\"600px;\" alt=\"loading\" id=\"img-loading\" />\n                    </div>\n\n                    <div id='div-metricas' className=\"not-showing\">\n                        <br /><h2>Métricas</h2>\n                        <p>\n                            <li key='MET01'>  Número de capas: <span id=\"num_capas\"></span></li>\n                            <li key='MET02'>  Número de neuronas: <span id=\"num_neuronas\"></span></li>\n                            <li key='MET03'>  Tasa de acierto: <span id=\"accuracy\"></span>%</li>\n                            <li key='MET04'>  Error: <span id=\"error_perc\"></span>%</li>\n                            <li key='MET05'>  Media de pérdida: <span id=\"avg_loss\"></span></li>\n                        </p>\n                        <div className='form-group'>\n                            <p><br/>Puede visualizar el modelo descargado<br/>utilizando la aplicación Netron.</p>\n                            <a href=\"https://netron.app\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <input id=\"netron\" type='button' disabled={false} className=\"btn btn-info\" value=\"Ir a Netron\" />\n                            </a>\n                        </div>\n                    </div>\n\n                    <div id='div-error' className=\"not-showing\" border=\"1\">\n                        <h2>Error</h2>\n                        <p id=\"p-error\"></p>\n                    </div>\n\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n"],"sourceRoot":""}