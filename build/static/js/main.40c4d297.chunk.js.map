{"version":3,"sources":["assets/img/logo.svg","components/Menu.js","components/Header.js","components/Footer.js","components/FormEvaluar.js","components/FormClasificar.js","components/Autor.js","components/Index.js","components/Error.js","Router.js","App.js","reportWebVitals.js","index.js","components/FormEntrenar.js","assets/img/lr2.gif"],"names":["Menu","id","Navbar","expand","Brand","href","src","logo","className","alt","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","React","Component","Header","Footer","FormEvaluar","props","emailRef","createRef","termsRef","onTrainUpload","event","setState","train","target","files","console","log","state","onTestUpload","test","onFormSubmit","e","preventDefault","email","current","value","terms","formData","FormData","append","service","axios","method","url","data","headers","then","response","catch","Fragment","onSubmit","this","type","name","accept","placeholder","onChange","ref","trainRef","required","dataset2Ref","defaultChecked","FormClasificar","Autor","Index","Error","Router","exact","path","component","FormEntrenar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","onFileUpload","classList","remove","add","d","utf8","encode","file","iconv","Buffer","from","archivo","Blob","csvURL","window","URL","createObjectURL","tempLink","createElement","setAttribute","click","metricas","prevProps","prevState","loading","num_capas","num_neuronas","accuracy","avg_loss","error"],"mappings":"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","file":"static/js/main.40c4d297.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e53c176c.svg\";","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport logo from '../assets/img/logo.svg';\n\nexport default class Menu extends React.Component {\n\n    render() {\n        return (\n            <div id=\"divMenu\">\n                <Navbar expand=\"lg\">\n                    <Navbar.Brand href=\"/\">\n                        {/* Carga el logo */}\n                        <div id=\"logo\">\n                            <img src={logo} className=\"app-logo\" alt=\"Logotipo\" />\n                            <span id=\"brand\">\n                                <strong>GANN</strong>Service\n                            </span>\n                        </div>\n                    </Navbar.Brand>\n                    {/* <Navbar.Brand href=\"/\">Inicio</Navbar.Brand>*/}\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            <Nav.Link href=\"/\">Inicio</Nav.Link>\n                            <NavDropdown title=\"Servicios\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"/entrenamiento\">Entrenamiento</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/evaluacion\">Evaluación</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/clasificacion\">Clasificación</NavDropdown.Item>\n                                {/* <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>*/}\n                            </NavDropdown>\n                            <Nav.Link href=\"/autor\">Autor y Memoria</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport Menu from './Menu';\n\nclass Header extends Component {\n\n    render() {\n        return (\n\n            <header id=\"header\">\n                <div className=\"center\">\n\n                    {/* Carga el menú */}\n                    <Menu/>\n\n                    {/* Limpiar flotados */}\n                    <div className=\"clearfix\"></div>\n                </div>\n            </header>\n\n        );\n    }\n\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer id=\"footer\">\n            <div className=\"center\">\n                <p>\n                    TFG de <a href=\"https://leroydeniz.com\"> Leroy Deniz</a> &nbsp; | &nbsp; Grado en Ingeniería Informática &nbsp; | &nbsp; Universidad del País Vasco\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nexport default class FormEvaluar extends Component {\n\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            service: 'test',\n            email: null,\n            terms: null,\n            train: null,\n            test: null\n        }\n    }\n\n    // referencias a los campos del formulario\n    emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTrainUpload = (event) => {\n        this.setState({ train: event.target.files[0] });\n        console.log(this.state);\n    };\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTestUpload = (event) => {\n        this.setState({ test: event.target.files[0] });\n        console.log(this.state);\n    };\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // actualizo las variables de estado con los varlores del formulario\n        this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        // Cargar el objeto \n        formData.append(\n            'email', this.emailRef.current.value\n        );\n        formData.append(\n            'servicio', this.state.service\n        );\n        formData.append(\n            'train', this.state.train, 'train'\n        );\n        formData.append(\n            'test', this.state.test, 'test'\n        );\n        formData.append(\n            'terms', this.termsRef.current.value\n        );\n        \n        axios({\n            method: \"post\",\n            url: `${API_URL}/test`,\n            data: formData,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n            .then(function (response) {\n                // todo correcto, hay que mostrar el response en pantalla\n                console.log(response);\n            })\n            .catch(function (response) {\n                // mostrar código de error\n                console.log(response);\n            });\n\n    };\n\n\n    render() {\n        return (\n            <React.Fragment>\n            <header className=\"App-header\">\n                <h1>Evaluar</h1>\n\n                <div className='form-group'>\n                    <p><b>Resultado:</b> datos de evaluación del clasificador.</p>\n                </div>\n\n                <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                    <div className=\"input-group mb-3\">\n                        <p>Definición de la red neuronal o conjunto de datos de entrenamiento:</p>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <input\n                            className=\"form-control\"\n                            type='file'\n                            id='train'\n                            name='train'\n                            accept=\".csv,.onnx\"\n                            placeholder=\"Dataset de train\"\n                            aria-label=\"Dataset de train\"\n                            aria-describedby=\"basic-addon1\"\n                            onChange={this.onTrainUpload}\n                            ref={this.trainRef}\n                            required />\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <p>Conjunto de datos clasificados:</p>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <input\n                            className=\"form-control\"\n                            type='file'\n                            id='dataset2'\n                            name='dataset2'\n                            accept=\".csv\"\n                            placeholder=\"Dataset de test\"\n                            aria-label=\"Dataset de test\"\n                            aria-describedby=\"basic-addon1\"\n                            onChange={this.onTestUpload}\n                            ref={this.dataset2Ref} />\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <p>Email (opcional):</p>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span\n                                className=\"input-group-text\"\n                                id=\"basic-addon1\">@</span>\n                        </div>\n                        <input\n                            className=\"form-control\"\n                            type='email'\n                            id='email'\n                            name='email'\n                            placeholder=\"Email\"\n                            aria-label=\"Email\"\n                            aria-describedby=\"basic-addon1\"\n                            ref={this.emailRef} />\n                    </div>\n\n                    <div className='form-group'>\n                        <p>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"terms\"\n                                    id=\"terms\"\n                                    value=\"Acepto\"\n                                    ref={this.termsRef}\n                                    defaultChecked={true} />\n                                Acepto los términos y condiciones del servicio.\n                            </label>\n                        </p>\n                    </div>\n\n                    <div className='form-group'>\n                        <input type='submit' className=\"btn btn-info\" value=\"Evaluar\" />\n                    </div>\n\n                </form>\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nexport default class FormClasificar extends Component {\n\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            service: 'classify',\n            email: null,\n            terms: null,\n            train: null,\n            test: null\n        }\n    }\n\n    // referencias a los campos del formulario\n    emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTrainUpload = (event) => {\n        this.setState({ train: event.target.files[0] });\n        console.log(this.state);\n    };\n    // función que actualiza el contenido del dataset en la variable de estado\n    onTestUpload = (event) => {\n        this.setState({ test: event.target.files[0] });\n        console.log(this.state);\n    };\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // actualizo las variables de estado con los valores del formulario\n        this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        // Cargar el objeto \n        formData.append(\n            'email', this.emailRef.current.value\n        );\n        formData.append(\n            'servicio', this.state.service\n        );\n        formData.append(\n            'train', this.state.train, 'train'\n        );\n        formData.append(\n            'test', this.state.test, 'test'\n        );\n        formData.append(\n            'terms', this.termsRef.current.value\n        );\n\n        axios({\n            method: \"post\",\n            url: `${API_URL}/classify`,\n            data: formData,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n            .then(function (response) {\n                // todo correcto, hay que mostrar el response en pantalla\n                console.log(response);\n            })\n            .catch(function (response) {\n                // mostrar código de error\n                console.log(response);\n            });\n\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <header className=\"App-header\">\n                    <h1>Clasificar</h1>\n\n                    <div className='form-group'>\n                        <p><b>Resultado:</b> conjunto de datos clasificado.</p>\n                    </div>\n\n                    <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                        <div className=\"input-group mb-3\">\n                            <p>Definición de la red neuronal o conjunto de datos de entrenamiento:</p>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                className=\"form-control\"\n                                type='file'\n                                id='train'\n                                name='train'\n                                accept=\".csv,.onnx\"\n                                placeholder=\"Dataset de train\"\n                                aria-label=\"Dataset de train\"\n                                aria-describedby=\"basic-addon1\"\n                                onChange={this.onTrainUpload}\n                                ref={this.trainRef}\n                                required />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <p>Conjunto de datos clasificados:</p>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <input\n                                className=\"form-control\"\n                                type='file'\n                                id='dataset2'\n                                name='dataset2'\n                                accept=\".csv\"\n                                placeholder=\"Dataset de test\"\n                                aria-label=\"Dataset de test\"\n                                aria-describedby=\"basic-addon1\"\n                                onChange={this.onTestUpload}\n                                ref={this.dataset2Ref} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <p>Email (opcional):</p>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span\n                                    className=\"input-group-text\"\n                                    id=\"basic-addon1\">@</span>\n                            </div>\n                            <input\n                                className=\"form-control\"\n                                type='email'\n                                id='email'\n                                name='email'\n                                placeholder=\"Email\"\n                                aria-label=\"Email\"\n                                aria-describedby=\"basic-addon1\"\n                                ref={this.emailRef} />\n                        </div>\n\n                        <div className='form-group'>\n                            <p>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"terms\"\n                                        id=\"terms\"\n                                        value=\"Acepto\"\n                                        ref={this.termsRef}\n                                        defaultChecked={true} />\n                                    Acepto los términos y condiciones del servicio.\n                                </label>\n                            </p>\n                        </div>\n\n                        <div className='form-group'>\n                            <input type='submit' className=\"btn btn-info\" value=\"Clasificar\" />\n                        </div>\n\n                    </form>\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Autor extends Component {\n  render() {\n    return (\n\n      <header className=\"App-header\">\n        <h1>Autor.</h1>\n        <h3>Leroy Deniz</h3>\n        <p>Grado en Ingeniería Informática<br />\n          Especialidad Ingeniería de Software<br /><br />\n          (+34) 669 987 109<br />\n          leroydeniz <code>[at]</code> icloud.com<br /><br />\n          <code>https://leroydeniz.com</code>\n        </p>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Index extends Component {\n    render(){\n        return(\n            <header className=\"App-header\">\n            <h1>GANN Service.</h1>\n            <p>\n              Los algoritmos de clasificación supervisada resuelven un tipo de problema específico donde se cuenta con una serie de datos previamente clasificados. Para poder decidir la clasificación de una muestra, se tiene en cuenta toda la información que se pueda extraer de un conjunto de datos inicial, de datos cuya clase es conocida por el clasificador.<br/><br/>\n              En este trabajo se implementa una aplicación web que permite al usuario entrenar una red neuronal, cargando un dataset de entrenamiento para ello y devolviéndole la definición de la red entrenada junto con información sobre la fidelidad de esta. Además podrá ingresar opcionalmente un dataset adicional que será procesado y clasificado con la misma red generada.<br/><br/>\n              La aplicación es construida sobre una arquitectura de tres capas, contando con una interfaz web que permitirá al usuario interactuar con el software, y cuyo Core es una API construida en Python. Esta última será la responsable de entrenar la red neuronal.<br/><br/>\n              Se aborda el diseño del Core utilizando técnicas de clasificación supervisada bajo entrenamiento de redes neuronales evolutivas por medio de algoritmos genéticos. El uso de algoritmos genéticos permite a la red crecer tanto en número de nodos como de capas de manera dinámica, en función de lo que ella misma considere necesaria para su propio entrenamiento.\n            </p>\n          </header>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport default class Error extends Component {\n    render(){\n        return(\n            \n            <header className=\"App-header\">\n            <h1>Ups.</h1>\n            <p>La página a la que intenta acceder no ha sido encontrada.</p>\n          </header>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport FormEntrenar from './components/FormEntrenar';\nimport FormEvaluar from './components/FormEvaluar';\nimport FormClasificar from './components/FormClasificar';\nimport Autor from './components/Autor';\nimport Index from './components/Index';\nimport Error from './components/Error';\n\n\nclass Router extends Component {\n/* Configurador de rutas y páginas */ \n    render() {\n\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Index}/>\n                    <Route exact path=\"/index\" component={Index}/>;\n                    <Route exact path=\"/entrenamiento\" component={FormEntrenar}/>;\n                    <Route exact path=\"/evaluacion\" component={FormEvaluar}/>;\n                    <Route exact path=\"/clasificacion\" component={FormClasificar}/>;\n                    <Route exact path=\"/autor\" component={Autor}/>;\n                    <Route component={Error}/>;\n                </Switch>\n            </BrowserRouter>\n        );\n\n    }\n\n}\n\nexport default Router;","import './assets/css/App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      {/* Importar el header */}\n      <Header />\n\n      {/* Importar el archivo de rutas */}\n      <Router/>\n\n\n      {/* Importar el footer */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport utf8 from 'utf8';\nimport iconv from 'iconv-lite';\nimport loading from '../assets/img/lr2.gif';\nconst API_URL = 'https://miescher.csic.edu.uy';\n\nexport default class FormEntrenar extends Component {\n\n    // constructor de la clase y definición de las variables de estado\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: null,\n            service: 'train',\n            terms: 'Acepto',\n            train: null,\n            metricas: []\n        }\n    }\n\n    // referencias a los campos del formulario\n    emailRef = React.createRef();\n    termsRef = React.createRef();\n\n    // función que actualiza el contenido del dataset en la variable de estado\n    onFileUpload = (event) => {\n        this.setState({\n            train: event.target.files[0]\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(this.state);\n    }\n\n    // función que se ejecuta al enviar el formulario\n    onFormSubmit = (e) => {\n\n        // para el flujo de eventos correspondiente al envío\n        e.preventDefault();\n\n        // Función de cambio de vista\n        document.getElementById(\"div-entrenar\").classList.remove('showing');\n        document.getElementById(\"div-entrenar\").classList.add('not-showing');\n        document.getElementById(\"div-loading\").classList.remove('not-showing');\n        document.getElementById(\"div-loading\").classList.add('showing');\n\n        // actualizo las variables de estado con los varlores del formulario\n        this.setState({ email: this.emailRef.current.value });\n        this.setState({ terms: this.termsRef.current.value });\n\n        // Crear el objeto de tipo FormData\n        var formData = new FormData();\n\n        // Cargar el objeto\n        formData.append(\n            'email', this.emailRef.current.value\n        );\n        formData.append(\n            'servicio', this.state.service\n        );\n        formData.append(\n            'train', this.state.train\n        );\n\n        formData.append(\n            'terms', this.termsRef.current.value\n        );\n\n        axios({\n            method: \"post\",\n            url: `${API_URL}/train`,\n            data: formData,\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                \"Access-Control-Allow-Headers\": \"Content-Type\",\n                \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\",\n                'Content-Type': 'multipart/form-data'\n            },\n        })\n            .then(function (response) {\n                // todo correcto, hay que mostrar el response en pantalla\n\n                document.getElementById(\"div-loading\").classList.remove('showing');\n                document.getElementById(\"div-loading\").classList.add('not-showing');\n                document.getElementById(\"div-metricas\").classList.remove('not-showing');\n                document.getElementById(\"div-metricas\").classList.add('showing');\n\n                console.log(response);\n\n                /*this.setState({\n                    metricas: response.data\n                });*/\n\n                var d = utf8.encode(response.data.file);\n                d = iconv.encode(Buffer.from(response.data.file), 'iso-8859-1');\n                var archivo = new Blob([d], { type: 'text/csv' });\n                var csvURL = window.URL.createObjectURL(archivo);\n                var tempLink = document.createElement('a');\n                tempLink.href = csvURL;\n                tempLink.setAttribute('download', 'model.onnx');\n                tempLink.click();\n            })\n            .catch(function (response) {\n                // mostrar código de error\n                console.log(\"ERROR >> \" + response);\n            });\n    };\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"App-header\">\n                    <h1>Entrenar.</h1>\n                    <div id='div-entrenar' className=\"showing\">\n\n                        <div className='form-group'>\n                            <p><b>Resultado:</b> configuración de una red neuronal y las métricas de evaluación de ésta.</p>\n                        </div>\n\n                        <form onSubmit={this.onFormSubmit} id=\"formServicios\">\n\n                            <div className=\"input-group mb-3\">\n                                <p>Conjunto de datos de entrenamiento:</p>\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    className=\"form-control\"\n                                    type='file'\n                                    id='train'\n                                    name='train'\n                                    accept=\".csv\"\n                                    placeholder=\"Dataset de train\"\n                                    aria-label=\"Dataset de train\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.trainRef}\n                                    onChange={this.onFileUpload}\n                                    required />\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <p>Email (opcional):</p>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon1\">@\n                                    </span>\n                                </div>\n                                <input\n                                    className=\"form-control\"\n                                    type='email'\n                                    id='email'\n                                    name='email'\n                                    placeholder=\"Email\"\n                                    aria-label=\"Email\"\n                                    aria-describedby=\"basic-addon1\"\n                                    ref={this.emailRef} />\n                            </div>\n\n                            <div className='form-group'>\n                                <p>\n                                    <label>\n                                        <input\n                                            type=\"checkbox\"\n                                            name=\"terms\"\n                                            id=\"terms\"\n                                            value=\"Acepto\"\n                                            ref={this.termsRef}\n                                            defaultChecked={true} />\n                                        Acepto los términos y condiciones del servicio.\n                                    </label>\n                                </p>\n                            </div>\n\n                            <div className='form-group'>\n                                <input type='submit' className=\"btn btn-info\" value=\"Entrenar\" />\n                            </div>\n\n                        </form>\n                    </div>\n\n                    <div id='div-loading' className=\"not-showing\">\n                        <img src={loading} alt=\"loading\" id=\"img-loading\"/>\n                    </div>\n\n                    <div id='div-metricas' className=\"not-showing\">\n                        <br/><h2>Métricas</h2>\n                        <p>\n                            <li key='MET01'>  Número de capas: {this.state.metricas.num_capas}</li>\n                            <li key='MET02'>  Número de neuronas: {this.state.metricas.num_neuronas}</li>\n                            <li key='MET03'>  Tasa de acierto: {this.state.metricas.accuracy}</li>\n                            <li key='MET04'>  Media de pérdida: {this.state.metricas.avg_loss}</li>\n                            <li key='MET05'>  Error: {this.state.metricas.error}</li>\n                        </p>\n                    </div>\n\n                </header>\n            </React.Fragment>\n        );\n\n    }\n}\n","export default __webpack_public_path__ + \"static/media/lr2.2cce4ca0.gif\";"],"sourceRoot":""}